as.character(as.expression(eq));
}
fluoplot <- ggplot(data = egfp1, mapping = aes(x = x, y = y)) +
geom_point(shape=1,color='#5e81ac') +
geom_smooth(method = 'lm', data = egfp1, se=FALSE,color='#bf616a') # to add trendline
f <- fluoplot +
annotate('text', x = 680, y = 750, label = lm_eq(egfp1), parse = TRUE) + #to show equation
labs(title = 'monomeric EGFP in yeast',
x = 'Image intensity (kHz)',
y = 'Concentration (nM)')
print(f)
###############################################################################
# Plot yeast Number_corrected against Volume with line and corr
rpl <- read.csv('rpl3.csv',sep=';', header = TRUE)
lm_eq <- function(df){
m <- lm(Number_corrected ~ 0+Volume, df);
corr <- cor.test(df[[3]],df[[4]])
eq <- substitute(~~Correlation~'='~c *','~~pval~'='~p, #only corr, no regression
list(c = format(unname(corr$estimate), digits = 5),
p = format(corr$p.value, digits = 5)))
as.character(as.expression(eq));
}
fluoplot <- ggplot(data = rpl, mapping = aes(x = Volume, y = Number_corrected)) +
geom_point(shape=1,color='#5e81ac') +
geom_smooth(method = "lm", data = rpl, se=FALSE,color='#bf616a') # to add trendline
f <- fluoplot +
annotate("text", x = 40, y = 0.5e5, label = lm_eq(rpl), parse = TRUE) + #to show equation
ggtitle('Amount of ribosome and volume') +
xlab(~'Volume' (mu * m^3))+
ylab(~N[ribosome])
print(f)
View(rpl)
## Only whole cells
idtf <- rpl[,2]!='whole cell'
rpl <- rpl[idtf,]
rpl <- read.csv('rpl3.csv',sep=';', header = TRUE)
## Exclude whole cells
idtf <- rpl[,2]!='whole cell'
rpl <- rpl[idtf,]
lm_eq <- function(df){
m <- lm(N_corrected ~ 0+Volume, df);
corr <- cor.test(df[[3]],df[[4]])
eq <- substitute(~~Correlation~'='~c *','~~pval~'='~p, #only corr, no regression
list(c = format(unname(corr$estimate), digits = 5),
p = format(corr$p.value, digits = 5)))
as.character(as.expression(eq));
}
fluoplot <- ggplot(data = rpl, mapping = aes(x = Volume, y = Number_corrected)) +
geom_point(shape=1,color='#5e81ac') +
geom_smooth(method = "lm", data = rpl, se=FALSE,color='#bf616a') # to add trendline
f <- fluoplot +
annotate("text", x = 40, y = 0.5e5, label = lm_eq(rpl), parse = TRUE) + #to show equation
ggtitle('Amount of ribosome and volume') +
xlab(~'Volume' (mu * m^3))+
ylab(~N[ribosome])
print(f)
head(rpl)
rpl
rpl <- read.csv('rpl3.csv',sep=';', header = TRUE)
## Exclude whole cells
idtf <- rpl[,2]!='whole cell'
rpl <- rpl[idtf,]
lm_eq <- function(df){
m <- lm(N_corrected ~ 0+Volume, df);
corr <- cor.test(df[[3]],df[[4]])
eq <- substitute(~~Correlation~'='~c *','~~pval~'='~p, #only corr, no regression
list(c = format(unname(corr$estimate), digits = 5),
p = format(corr$p.value, digits = 5)))
as.character(as.expression(eq));
}
fluoplot <- ggplot(data = rpl, mapping = aes(x = Volume, y = Number_corrected)) +
geom_point(shape=1,color='#5e81ac') +
geom_smooth(method = "lm", data = rpl, se=FALSE,color='#bf616a') # to add trendline
f <- fluoplot +
annotate("text", x = 40, y = 0.5e5, label = lm_eq(rpl), parse = TRUE) + #to show equation
ggtitle('Amount of ribosome and volume') +
xlab(~'Volume' (mu * m^3))+
ylab(~N[ribosome])
print(f)
lm_eq <- function(df){
m <- lm(N_corrected ~ 0+Volume, df);
corr <- cor.test(df[[3]],df[[4]])
eq <- substitute(~~Correlation~'='~c *','~~pval~'='~p, #only corr, no regression
list(c = format(unname(corr$estimate), digits = 5),
p = format(corr$p.value, digits = 5)))
as.character(as.expression(eq));
}
fluoplot <- ggplot(data = rpl, mapping = aes(x = Volume, y = Number_corrected)) +
geom_point(shape=1,color='#5e81ac') +
geom_smooth(method = "lm", data = rpl, se=FALSE,color='#bf616a') # to add trendline
f <- fluoplot +
annotate("text", x = 40, y = 0.5e5, label = lm_eq(rpl), parse = TRUE) + #to show equation
ggtitle('Amount of ribosome and volume') +
xlab(~'Volume' (mu * m^3))+
ylab(~N[ribosome])
lm_eq <- function(df){
m <- lm(Number_corrected ~ 0+Volume, df);
corr <- cor.test(df[[3]],df[[4]])
eq <- substitute(~~Correlation~'='~c *','~~pval~'='~p, #only corr, no regression
list(c = format(unname(corr$estimate), digits = 5),
p = format(corr$p.value, digits = 5)))
as.character(as.expression(eq));
}
fluoplot <- ggplot(data = rpl, mapping = aes(x = Volume, y = Number_corrected)) +
geom_point(shape=1,color='#5e81ac') +
geom_smooth(method = "lm", data = rpl, se=FALSE,color='#bf616a') # to add trendline
f <- fluoplot +
annotate("text", x = 40, y = 0.5e5, label = lm_eq(rpl), parse = TRUE) + #to show equation
ggtitle('Amount of ribosome and volume') +
xlab(~'Volume' (mu * m^3))+
ylab(~N[ribosome])
print(f)
###############################################################################
# Plot yeast Density against Volume with 2 dashed lines
rpl <- read.csv('rpl3.csv',sep=';', header = TRUE)
## Only whole cells
idtf <- rpl[,2]=='whole cell'
rpl <- rpl[idtf,]
lm_eq <- function(df){
m <- lm(Volume ~ 0+Density, df);
corr <- cor(df[4],df[5])
eq <- substitute(Correlation~'='~c,
list(c = format(corr, digits = 5)))
as.character(as.expression(eq));
}
fluoplot <- ggplot(data = rpl, mapping = aes(x = Volume, y = Density)) +
geom_point(shape=1,color='#5e81ac') +
geom_hline(yintercept=8000, linetype="dashed", color = "#bf616a") + #dash1
geom_hline(yintercept=4000, linetype="dashed", color = "#bf616a") #dash2
f <- fluoplot +
ggtitle('Density and volume') +
xlab(~'Volume' (mu * m^3))+
ylab(~'Density' (N[ribosome]/mu * m^3))
print(f)
fluoplot <- ggplot(data = rpl, mapping = aes(x = Volume, y = Density)) +
geom_point(shape=1,color='#5e81ac') +
geom_hline(yintercept=8000, linetype="dashed", color = "#bf616a") + #dash1
geom_hline(yintercept=5000, linetype="dashed", color = "#bf616a") #dash2
f <- fluoplot +
ggtitle('Density and volume') +
xlab(~'Volume' (mu * m^3))+
ylab(~'Density' (N[ribosome]/mu * m^3))
print(f)
###############################################################################
# Grouped boxplot
rpl <- read.csv('rpl3.csv',sep=';', header = TRUE)
rpl <- rpl[c(1,2,3)] #Choose only relevant columns
colnames(rpl) <- c('CellCyclePhase', 'Morphology','N') #Rename cols for better legends
###############################################################################
# Grouped boxplot of whole cells
rpl <- read.csv('rpl3.csv',sep=';', header = TRUE)
## Only whole cells
idtf <- rpl[,2]=='whole cell'
rpl <- rpl[idtf,]
rpl <- rpl[c(1,2,3)] #Choose only relevant columns
###############################################################################
# Grouped boxplot of whole cells
rpl <- read.csv('rpl3.csv',sep=';', header = TRUE)
## Only whole cells
idtf <- rpl[,2]=='whole cell'
rpl <- rpl[idtf,]
rpl <- rpl[c(1,2,5)] #Choose only relevant columns
colnames(rpl) <- c('CellCyclePhase', 'Morphology','Density') #Rename cols for better legends
ylgnbl <- c(#'#c7e9b4',
'#41b6c4',
'#253494')
rpl$Morphology<-factor(rpl$Morphology) #Set this column as factor
rpl$CellCyclePhase<-factor(rpl$CellCyclePhase)
bp <- ggplot(rpl, aes(CellCyclePhase, N, colour=Morphology,fill=Morphology)) +
geom_boxplot(outlier.shape = 21,alpha=0.6)+
ylab(~N[ribosome])+
xlab('Cell Cycle Phase')
bp +
scale_fill_manual(values=nord2) +
scale_colour_manual(values=nord) +
theme(legend.position = "bottom")
bp +
scale_fill_manual(values=ylgnbl) +
scale_colour_manual(values=ylgnbl) +
theme(legend.position = "bottom")
bp <- ggplot(rpl, aes(CellCyclePhase, Density, colour=Morphology,fill=Morphology)) +
geom_boxplot(outlier.shape = 21,alpha=0.6)+
ylab(~N[ribosome])+
xlab('Cell Cycle Phase')
bp +
scale_fill_manual(values=ylgnbl) +
scale_colour_manual(values=ylgnbl) +
theme(legend.position = "bottom")
###############################################################################
# Grouped boxplot of whole cells
rpl <- read.csv('rpl3.csv',sep=';', header = TRUE)
## Only whole cells
idtf <- rpl[,2]=='whole cell'
rpl <- rpl[idtf,]
rpl <- rpl[c(1,2,5)] #Choose only relevant columns
colnames(rpl) <- c('CellCyclePhase', 'Morphology','Density') #Rename cols for better legends
ylgnbl <- c(#'#c7e9b4',
'#41b6c4',
'#253494')
rpl$Morphology<-factor(rpl$Morphology) #Set this column as factor
rpl$CellCyclePhase<-factor(rpl$CellCyclePhase)
bp <- ggplot(rpl, aes(CellCyclePhase, Density, colour=Morphology,fill=Morphology)) +
geom_boxplot(outlier.shape = 21,alpha=0.6)+
ylab(~N[ribosome])+
xlab('Cell Cycle Phase')
bp +
scale_fill_manual(values=ylgnbl) +
scale_colour_manual(values=ylgnbl) +
theme(legend.position = "bottom")
bp <- ggplot(rpl, aes(CellCyclePhase, Density, colour=Morphology,fill=Morphology)) +
geom_boxplot(outlier.shape = 21,alpha=0.6)+
ylab(~Density)+
xlab('Cell Cycle Phase')
bp +
scale_fill_manual(values=ylgnbl) +
scale_colour_manual(values=ylgnbl) +
theme(legend.position = "bottom")
###############################################################################
# Grouped boxplot of whole cells
rpl <- read.csv('rpl3.csv',sep=';', header = TRUE)
rpl <- rpl[c(1,2,5)] #Choose only relevant columns
colnames(rpl) <- c('CellCyclePhase', 'Morphology','Density') #Rename cols for better legends
ylgnbl <- c(#'#c7e9b4',
'#41b6c4',
'#253494')
rpl$Morphology<-factor(rpl$Morphology) #Set this column as factor
rpl$CellCyclePhase<-factor(rpl$CellCyclePhase)
bp <- ggplot(rpl, aes(CellCyclePhase, Density, colour=Morphology,fill=Morphology)) +
geom_boxplot(outlier.shape = 21,alpha=0.6)+
ylab(~'Density' (N[ribosome]/mu * m^3))+
xlab('Cell Cycle Phase')
bp +
scale_fill_manual(values=ylgnbl) +
scale_colour_manual(values=ylgnbl) +
theme(legend.position = "bottom")
ylgnbl <- c('#c7e9b4',
'#41b6c4',
'#253494')
rpl$Morphology<-factor(rpl$Morphology) #Set this column as factor
rpl$CellCyclePhase<-factor(rpl$CellCyclePhase)
bp <- ggplot(rpl, aes(CellCyclePhase, Density, colour=Morphology,fill=Morphology)) +
geom_boxplot(outlier.shape = 21,alpha=0.6)+
ylab(~'Density' (N[ribosome]/mu * m^3))+
xlab('Cell Cycle Phase')
bp +
scale_fill_manual(values=ylgnbl) +
scale_colour_manual(values=ylgnbl) +
theme(legend.position = "bottom")
###############################################################################
# Grouped boxplot of whole cells
rpl <- read.csv('rpl3.csv',sep=';', header = TRUE)
## Only whole cells
idtf <- rpl[,2]=='whole cell'
rpl <- rpl[idtf,]
rpl <- rpl[c(1,2,5)] #Choose only relevant columns
colnames(rpl) <- c('CellCyclePhase', 'Morphology','Density') #Rename cols for better legends
ylgnbl <- c(#'#c7e9b4',
#'#41b6c4',
'#253494')
rpl$Morphology<-factor(rpl$Morphology) #Set this column as factor
rpl$CellCyclePhase<-factor(rpl$CellCyclePhase)
bp <- ggplot(rpl, aes(CellCyclePhase, Density, colour=Morphology,fill=Morphology)) +
geom_boxplot(outlier.shape = 21,alpha=0.6)+
ylab(~'Density' (N[ribosome]/mu * m^3))+
xlab('Cell Cycle Phase')
bp +
scale_fill_manual(values=ylgnbl) +
scale_colour_manual(values=ylgnbl) +
theme(legend.position = "bottom")
rpl <- read.csv('rpl3.csv',sep=';', header = TRUE)
## Exclude whole cells
idtf <- rpl[,2]!='whole cell'
rpl <- rpl[idtf,]
rpl <- rpl[c(1,2,5)] #Choose only relevant columns
colnames(rpl) <- c('CellCyclePhase', 'Morphology','Density') #Rename cols for better legends
ylgnbl <- c('#c7e9b4',
'#41b6c4')
#'#253494')
rpl$Morphology<-factor(rpl$Morphology) #Set this column as factor
rpl$CellCyclePhase<-factor(rpl$CellCyclePhase)
bp <- ggplot(rpl, aes(CellCyclePhase, Density, colour=Morphology,fill=Morphology)) +
geom_boxplot(outlier.shape = 21,alpha=0.6)+
ylab(~'Density' (N[ribosome]/mu * m^3))+
xlab('Cell Cycle Phase')
bp +
scale_fill_manual(values=ylgnbl) +
scale_colour_manual(values=ylgnbl) +
theme(legend.position = "bottom")
ylgnbl <- c(#'#c7e9b4',
'#41b6c4',
'#253494')
rpl$Morphology<-factor(rpl$Morphology) #Set this column as factor
rpl$CellCyclePhase<-factor(rpl$CellCyclePhase)
bp <- ggplot(rpl, aes(CellCyclePhase, Density, colour=Morphology,fill=Morphology)) +
geom_boxplot(outlier.shape = 21,alpha=0.6)+
ylab(~'Density' (N[ribosome]/mu * m^3))+
xlab('Cell Cycle Phase')
bp +
scale_fill_manual(values=ylgnbl) +
scale_colour_manual(values=ylgnbl) +
theme(legend.position = "bottom")
###############################################################################
# ANOVA then pairwise t test
# http://www.sthda.com/english/wiki/one-way-anova-test-in-r
# chekc if interested in density, vol, or N
rpl <- read.csv('rpl3.csv',sep=';', header = TRUE)
rpl <- rpl[c(1,2,5)] #Choose only relevant columns
colnames(rpl) <- c('CellCyclePhase', 'Morphology','Density') #Rename cols for better legends
rpl$Morphology<-factor(rpl$Morphology) #Set this column as factor
rpl$CellCyclePhase<-factor(rpl$CellCyclePhase)
group_by(rpl, Morphology) %>%
summarise(
count = n(),
mean = mean(N, na.rm = TRUE),
sd = sd(N, na.rm = TRUE)
)
group_by(rpl, Morphology) %>%
summarise(
count = n(),
mean = mean(Density, na.rm = TRUE),
sd = sd(Density, na.rm = TRUE)
)
###############################################################################
# ANOVA then pairwise t test
# http://www.sthda.com/english/wiki/one-way-anova-test-in-r
# chekc if interested in density, vol, or N
rpl <- read.csv('rpl3.csv',sep=';', header = TRUE)
## Only whole cells
idtf <- rpl[,2]=='whole cell'
rpl <- rpl[idtf,]
rpl <- rpl[c(1,2,5)] #Choose only relevant columns
colnames(rpl) <- c('CellCyclePhase', 'Morphology','Density') #Rename cols for better legends
rpl$Morphology<-factor(rpl$Morphology) #Set this column as factor
rpl$CellCyclePhase<-factor(rpl$CellCyclePhase)
group_by(rpl, Morphology) %>%
summarise(
count = n(),
mean = mean(Density, na.rm = TRUE),
sd = sd(Density, na.rm = TRUE)
)
# res.aov <- aov(N ~ CellCyclePhase, data = rpl_)
# summary(res.aov)
res.aov <- aov(N ~ Morphology, data = rpl)
# res.aov <- aov(N ~ CellCyclePhase, data = rpl_)
# summary(res.aov)
res.aov <- aov(Density ~ Morphology, data = rpl)
rpl
t.test(rpl)
t.test(rpl$Morphology,rpl$Density)
t.test(rpl$Density)
plot(extra ~ group, data = sleep)
data(sleep)
force(sleep)
# TukeyHSD(res.aov)
pairwise.t.test(rpl$Density, rpl$CellCyclePhase,p.adjust.method = "BH") # adjusted Benjamini-Hochberg
knitr::opts_chunk$set(echo = TRUE)
rpl <- read.csv('rpl3.csv',sep=';', header = TRUE)
## Only whole cells
idtf <- rpl[,2]=='whole cell'
rpl <- rpl[idtf,]
rpl <- rpl[c(1,2,3)] #Choose only relevant columns
colnames(rpl) <- c('CellCyclePhase', 'Morphology','Nribosome') #Rename cols for better legends
rpl$Morphology<-factor(rpl$Morphology) #Set this column as factor
rpl$CellCyclePhase<-factor(rpl$CellCyclePhase)
## Exclude S phase
idtf1 <- rpl[,1]=='late S'
rpl <- rpl[idtf1,]
rpl <- rpl[c(1,2,3)] #Choose only relevant columns
colnames(rpl) <- c('CellCyclePhase', 'Morphology','Nribosome') #Rename cols for better legends
rpl$Morphology<-factor(rpl$Morphology) #Set this column as factor
rpl$CellCyclePhase<-factor(rpl$CellCyclePhase)
rpl <- read.csv('rpl3.csv',sep=';', header = TRUE)
## Only whole cells
idtf <- rpl[,2]=='whole cell'
rpl <- rpl[idtf,]
## Exclude S phase
idtf1 <- rpl[,1]!='late S'
rpl <- rpl[idtf1,]
rpl <- rpl[c(1,2,3)] #Choose only relevant columns
colnames(rpl) <- c('CellCyclePhase', 'Morphology','Nribosome') #Rename cols for better legends
rpl$Morphology<-factor(rpl$Morphology) #Set this column as factor
rpl$CellCyclePhase<-factor(rpl$CellCyclePhase)
rpl[sample(nrow(rpl),5),]
summary(rpl)
rpl <- read.csv('rpl3.csv',sep=';', header = TRUE)
## Only whole cells
idtf <- rpl[,2]=='whole cell'
rpl <- rpl[idtf,]
## Exclude S phase
idtf1 <- rpl[,1]!='late S'
rpl <- rpl[idtf1,]
rpl <- rpl[c(1,2,5)] #Choose only relevant columns
colnames(rpl) <- c('CellCyclePhase', 'Morphology','Density') #Rename cols for better legends
rpl$Morphology<-factor(rpl$Morphology) #Set this column as factor
rpl$CellCyclePhase<-factor(rpl$CellCyclePhase)
rpl <- read.csv('rpl3.csv',sep=';', header = TRUE)
## Only whole cells
idtf <- rpl[,2]=='whole cell'
rpl <- rpl[idtf,]
## Exclude S phase
idtf1 <- rpl[,1]!='late S'
rpl <- rpl[idtf1,]
rpl <- rpl[c(1,2,5)] #Choose only relevant columns
colnames(rpl) <- c('CellCyclePhase', 'Morphology','Density') #Rename cols for better legends
rpl$Morphology<-factor(rpl$Morphology) #Set this column as factor
rpl$CellCyclePhase<-factor(rpl$CellCyclePhase)
## Data Summary
```{r sumrpl}
rpl[sample(nrow(rpl),5),]
summary(rpl)
res.aov <- aov(Density ~ Morphology, data = rpl)
rpl
res.aov <- aov(Density ~ CellCyclePhase, data = rpl)
summary(res.aov)
plot(res.aov, 2)
aov_residuals <- residuals(object = res.aov)
shapiro.test(x = aov_residuals)
knitr::opts_chunk$set(echo = TRUE)
rpl <- read.csv('rpl3.csv',sep=';', header = TRUE)
rpl <- rpl[c(1,2,5)] #Choose only relevant columns
colnames(rpl) <- c('CellCyclePhase', 'Morphology','Density') #Rename cols for better legends
rpl$Morphology<-factor(rpl$Morphology) #Set this column as factor
rpl$CellCyclePhase<-factor(rpl$CellCyclePhase)
## Exclude whole cells
idtf <- rpl[,2]!='whole cell'
rpl <- rpl[idtf,]
rpl[sample(nrow(rpl),5),]
summary(rpl)
res.aov <- aov(Density ~ CellCyclePhase, data = rpl)
summary(res.aov)
res.aov <- aov(Density ~ Morphology, data = rpl)
res.aov <- aov(Density ~ Morphology, data = rpl)
summary(res.aov)
res.aov <- aov(Density ~ CellCyclePhase, data = rpl)
summary(res.aov)
pairwise.t.test(rpl$Density, rpl$CellCyclePhase,p.adjust.method = "BH")
t.test(rpl$Density,rpl$Morphology)
t.test(rpl$Morphology,rpl$Density)
t.test(rpl$Density,rpl$CellCyclePhase)
rpl <- read.csv('rpl3.csv',sep=';', header = TRUE)
rpl <- rpl[c(1,2,5)] #Choose only relevant columns
colnames(rpl) <- c('CellCyclePhase', 'Morphology','Density') #Rename cols for better legends
rpl$Morphology<-factor(rpl$Morphology) #Set this column as factor
rpl$CellCyclePhase<-factor(rpl$CellCyclePhase)
## Exclude whole cells
idtf <- rpl[,2]!='whole cell'
rpl <- rpl[idtf,]
#rpl<- rpl[rpl[,1]!='late S',] # remove late s
#rpl[sample(nrow(rpl),5),]
summary(rpl)
res.aov <- aov(Density ~ Morphology, data = rpl)
summary(res.aov)
res.aov <- aov(Density ~ CellCyclePhase, data = rpl)
summary(res.aov)
res.aov <- aov(Density ~ Morphology, data = rpl)
summary(res.aov)
pairwise.t.test(rpl$Density, rpl$Morphology,p.adjust.method = "BH")
t.test(rpl$Density,rpl$Morphology)
pairwise.t.test(rpl$Density,rpl$Morphology)
pairwise.t.test(rpl$Density,rpl$Morphology, p.adjust.method = 'BH')
rpl <- read.csv('rpl3.csv',sep=';', header = TRUE)
## Only whole cells
idtf <- rpl[,2]=='whole cell'
rpl <- rpl[idtf,]
## Exclude S phase
idtf1 <- rpl[,1]!='late S'
rpl <- rpl[idtf1,]
rpl <- rpl[c(1,2,5)] #Choose only relevant columns
colnames(rpl) <- c('CellCyclePhase', 'Morphology','Density') #Rename cols for better legends
rpl$Morphology<-factor(rpl$Morphology) #Set this column as factor
rpl$CellCyclePhase<-factor(rpl$CellCyclePhase)
res.aov <- aov(Density ~ CellCyclePhase, data = rpl)
summary(res.aov)
plot(res.aov, 2)
rpl <- read.csv('rpl3.csv',sep=';', header = TRUE)
rpl <- rpl[idtf,]
## Exclude G1 phase
idtf1 <- rpl[,1]!='G1'
rpl <- rpl[idtf1,]
rpl <- rpl[c(1,2,5)] #Choose only relevant columns
rpl$Morphology<-factor(rpl$Morphology) #Set this column as factor
rpl$CellCyclePhase<-factor(rpl$CellCyclePhase)
res.aov <- aov(Density ~ Morphology, data = rpl)
summary(res.aov)
plot(res.aov, 2)
#plot(res.aov, 2)
aov_residuals <- residuals(object = res.aov)
shapiro.test(x = aov_residuals)
#plot(res.aov, 2)
aov_residuals <- residuals(object = res.aov)
shapiro.test(x = aov_residuals)
rpl <- read.csv('rpl3.csv',sep=';', header = TRUE)
## Exclude whole cells
idtf <- rpl[,2]!='whole cell'
rpl <- rpl[idtf,]
lm_eq <- function(df){
m <- lm(Number_corrected ~ 0+Volume, df);
corr <- cor.test(df[[3]],df[[4]])
eq <- substitute(~~Correlation~'='~c *','~~pval~'='~p, #only corr, no regression
list(c = format(unname(corr$estimate), digits = 5),
p = format(corr$p.value, digits = 5)))
as.character(as.expression(eq));
}
fluoplot <- ggplot(data = rpl, mapping = aes(x = Volume, y = Number_corrected)) +
geom_point(shape=1,color='#5e81ac') +
geom_smooth(method = "lm", data = rpl, se=FALSE,color='#bf616a') # to add trendline
f <- fluoplot +
annotate("text", x = 40, y = 0.5e5, label = lm_eq(rpl), parse = TRUE) + #to show equation
ggtitle('Density and volume') +
xlab(~'Volume' (mu * m^3))+
ylab(~N[ribosome])
print(f)
